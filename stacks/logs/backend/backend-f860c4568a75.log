2024-08-08T00:15:30.029Z Load environment configuration
mkdir: created directory '/appsmith-stacks/git-storage'
2024-08-08T00:15:30.038Z Waiting for RTS to start ...
{"success":true}2024-08-08T00:15:31.056Z RTS started.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@6659c656]
SLF4J: Found provider [org.slf4j.reload4j.Reload4jServiceProvider@6d5380c2]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [ch.qos.logback.classic.spi.LogbackServiceProvider@6659c656]
[2024-08-08 00:15:31,546] requestId= userEmail= traceId= spanId= - Starting ServerApplication vv1.34 using Java 17.0.9 with PID 1819 (/opt/appsmith/backend/server.jar started by root in /opt/appsmith/backend)
[2024-08-08 00:15:31,547] requestId= userEmail= traceId= spanId= - Running with Spring Boot v3.0.9, Spring v6.0.11
[2024-08-08 00:15:31,547] requestId= userEmail= traceId= spanId= - The following 1 profile is active: "production"
[2024-08-08 00:15:32,112] requestId= userEmail= traceId= spanId= - Multiple Spring Data modules found, entering strict repository configuration mode
[2024-08-08 00:15:32,113] requestId= userEmail= traceId= spanId= - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[2024-08-08 00:15:32,244] requestId= userEmail= traceId= spanId= - Finished Spring Data repository scanning in 129 ms. Found 45 Reactive MongoDB repository interfaces.
[2024-08-08 00:15:33,054] requestId= userEmail= traceId= spanId= - Application started with build version v1.34, and commitSha b21aa076a0c031ca5bacfd0731c6d636c54a6e53
[2024-08-08 00:15:33,138] requestId= userEmail= traceId= spanId= - Found MongoDB uri configuring now
[2024-08-08 00:15:33,259] requestId= userEmail= traceId= spanId= - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.8.2"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "6.6.32-linuxkit"}, "platform": "Java/Eclipse Adoptium/17.0.9+9"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='appsmith', source='appsmith', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3bbf9027, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@49cf9028], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@10c2064a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5cdf39b2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
[2024-08-08 00:15:33,317] requestId= userEmail= traceId= spanId= - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27450166, setName='mr1', canonicalAddress=localhost:27017, hosts=[localhost:27017], passives=[], arbiters=[], primary='localhost:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000002, setVersion=1, topologyVersion=TopologyVersion{processId=66b40e22cb0f9f3f814c5dd7, counter=6}, lastWriteDate=Thu Aug 08 00:15:30 UTC 2024, lastUpdateTimeNanos=191826709502}
[2024-08-08 00:15:34,237] requestId= userEmail= traceId= spanId= - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "6.6.32-linuxkit"}, "platform": "Java/Eclipse Adoptium/17.0.9+9"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='appsmith', source='appsmith', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@67fa5045, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@49cf9028], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@10c2064a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5cdf39b2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
[2024-08-08 00:15:34,241] requestId= userEmail= traceId= spanId= - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4832292, setName='mr1', canonicalAddress=localhost:27017, hosts=[localhost:27017], passives=[], arbiters=[], primary='localhost:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000002, setVersion=1, topologyVersion=TopologyVersion{processId=66b40e22cb0f9f3f814c5dd7, counter=6}, lastWriteDate=Thu Aug 08 00:15:30 UTC 2024, lastUpdateTimeNanos=192752208503}
[2024-08-08 00:15:34,326] requestId= userEmail= traceId= spanId= - Enabled plugins: []
[2024-08-08 00:15:34,326] requestId= userEmail= traceId= spanId= - Disabled plugins: []
[2024-08-08 00:15:34,329] requestId= userEmail= traceId= spanId= - PF4J version 3.10.0 in 'deployment' mode
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'appsmithai-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'saas-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'google-sheets-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'js-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'oracle-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'smtp-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'amazons3-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'mysql-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'restapi-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'postgres-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'snowflake-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'googleai-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'anthropic-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'elasticsearch-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'mssql-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,473] requestId= userEmail= traceId= spanId= - Plugin 'redshift-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'databricks-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'mongo-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'graphql-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'aws-lambda-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'openai-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'dynamo-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'arangodb-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'redis-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Plugin 'firestore-plugin@1.0-SNAPSHOT' resolved
[2024-08-08 00:15:34,474] requestId= userEmail= traceId= spanId= - Start plugin 'appsmithai-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,479] requestId= userEmail= traceId= spanId= - Start plugin 'saas-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,479] requestId= userEmail= traceId= spanId= - Start plugin 'google-sheets-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,488] requestId= userEmail= traceId= spanId= - Start plugin 'js-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,488] requestId= userEmail= traceId= spanId= - Start plugin 'oracle-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,492] requestId= userEmail= traceId= spanId= - Start plugin 'smtp-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,495] requestId= userEmail= traceId= spanId= - Start plugin 'amazons3-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,502] requestId= userEmail= traceId= spanId= - Start plugin 'mysql-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,505] requestId= userEmail= traceId= spanId= - Start plugin 'restapi-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,509] requestId= userEmail= traceId= spanId= - Start plugin 'postgres-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,513] requestId= userEmail= traceId= spanId= - Start plugin 'snowflake-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,519] requestId= userEmail= traceId= spanId= - Start plugin 'googleai-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,519] requestId= userEmail= traceId= spanId= - Start plugin 'anthropic-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,520] requestId= userEmail= traceId= spanId= - Start plugin 'elasticsearch-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,520] requestId= userEmail= traceId= spanId= - Start plugin 'mssql-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,524] requestId= userEmail= traceId= spanId= - Start plugin 'redshift-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,527] requestId= userEmail= traceId= spanId= - Start plugin 'databricks-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,529] requestId= userEmail= traceId= spanId= - Start plugin 'mongo-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,531] requestId= userEmail= traceId= spanId= - Start plugin 'graphql-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,531] requestId= userEmail= traceId= spanId= - Start plugin 'aws-lambda-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,545] requestId= userEmail= traceId= spanId= - Start plugin 'openai-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,548] requestId= userEmail= traceId= spanId= - Start plugin 'dynamo-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,551] requestId= userEmail= traceId= spanId= - Start plugin 'arangodb-plugin@1.0-SNAPSHOT'
[2024-08-08 00:15:34,551] requestId= userEmail= traceId= spanId= - Start plugin 'redis-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:34,554] requestId= userEmail= traceId= spanId= - Start plugin 'firestore-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2024-08-08 00:15:35,735] requestId= userEmail= traceId= spanId= - Mongock runner COMMUNITY version[5.1.6]
[2024-08-08 00:15:35,735] requestId= userEmail= traceId= spanId= - Running Mongock with NO metadata
[2024-08-08 00:15:35,735] requestId= userEmail= traceId= spanId= - Property transaction-enabled not provided. It will become true as default in next versions. Set explicit value to false in case transaction are not desired.
[2024-08-08 00:15:35,735] requestId= userEmail= traceId= spanId= - Property transaction-enabled not provided and is unknown if driver is transactionable. BY DEFAULT MONGOCK WILL RUN IN NO-TRANSACTION MODE.
[2024-08-08 00:15:35,771] requestId= userEmail= traceId= spanId= - Reflections took 28 ms to scan 1 urls, producing 6 keys and 69 values
[2024-08-08 00:15:35,784] requestId= userEmail= traceId= spanId= - Reflections took 6 ms to scan 1 urls, producing 6 keys and 69 values
[2024-08-08 00:15:36,036] requestId= userEmail= traceId= spanId= - Mongock trying to acquire the lock
[2024-08-08 00:15:36,127] requestId= userEmail= traceId= spanId= - Mongock acquired the lock until: Thu Aug 08 00:16:36 UTC 2024
[2024-08-08 00:15:36,128] requestId= userEmail= traceId= spanId= - Starting mongock lock daemon...
[2024-08-08 00:15:36,133] requestId= userEmail= traceId= spanId= - Mongock starting the data migration sequence id[2024-08-08T00:15:35.706362631-393]...
[2024-08-08 00:15:36,169] requestId= userEmail= traceId= spanId= - method[initializeSchemaVersion] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:36,201] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="initialize-schema-version", "type"="execution", "author"="", "class"="DatabaseChangelog0", "method"="initializeSchemaVersion"}
[2024-08-08 00:15:36,301] requestId= userEmail= traceId= spanId= - method[initialPlugins] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:36,317] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="initial-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="initialPlugins"}
[2024-08-08 00:15:36,426] requestId= userEmail= traceId= spanId= - method[addInitialIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,088] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="initial-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addInitialIndexes"}
[2024-08-08 00:15:37,194] requestId= userEmail= traceId= spanId= - method[setInitialSequenceForDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,205] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="set-initial-sequence-for-datasource", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setInitialSequenceForDatasource"}
[2024-08-08 00:15:37,311] requestId= userEmail= traceId= spanId= - method[setPluginImageAndDocsLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,328] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="set-plugin-image-and-docs-link", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setPluginImageAndDocsLink"}
[2024-08-08 00:15:37,432] requestId= userEmail= traceId= spanId= - method[mysqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,442] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="install-mysql-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="mysqlPlugin"}
[2024-08-08 00:15:37,546] requestId= userEmail= traceId= spanId= - method[updateDatabaseDocumentationLinks] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,555] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-database-documentation-links", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateDatabaseDocumentationLinks"}
[2024-08-08 00:15:37,662] requestId= userEmail= traceId= spanId= - method[generateUniqueIdForInstance] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,668] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="generate-unique-id-for-instance", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="generateUniqueIdForInstance"}
[2024-08-08 00:15:37,775] requestId= userEmail= traceId= spanId= - method[fixTokenExpiration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,797] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="fix-password-reset-token-expiration", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="fixTokenExpiration"}
[2024-08-08 00:15:37,899] requestId= userEmail= traceId= spanId= - method[addElasticSearchPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:37,904] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-elastic-search-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addElasticSearchPlugin"}
[2024-08-08 00:15:38,008] requestId= userEmail= traceId= spanId= - method[addDynamoPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,012] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-dynamo-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addDynamoPlugin"}
[2024-08-08 00:15:38,116] requestId= userEmail= traceId= spanId= - method[usePngLogos] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,120] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="use-png-logos", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="usePngLogos"}
[2024-08-08 00:15:38,225] requestId= userEmail= traceId= spanId= - method[addRedisPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,232] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-redis-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addRedisPlugin"}
[2024-08-08 00:15:38,335] requestId= userEmail= traceId= spanId= - method[addMsSqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,340] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-msSql-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addMsSqlPlugin"}
[2024-08-08 00:15:38,444] requestId= userEmail= traceId= spanId= - method[addNewPageIndexAfterDroppingNewPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,459] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="createNewPageIndexAfterDroppingNewPage", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewPageIndexAfterDroppingNewPage"}
[2024-08-08 00:15:38,566] requestId= userEmail= traceId= spanId= - method[addNewActionIndexAfterDroppingNewAction] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,579] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="createNewActionIndexAfterDroppingNewAction", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewActionIndexAfterDroppingNewAction"}
[2024-08-08 00:15:38,687] requestId= userEmail= traceId= spanId= - method[addNewPageAndNewActionNewIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,699] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="new-page-new-action-add-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewPageAndNewActionNewIndexes"}
[2024-08-08 00:15:38,807] requestId= userEmail= traceId= spanId= - method[updateActionIndexToSingleMultipleIndices] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,822] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-action-index-to-single-multiple-indices", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateActionIndexToSingleMultipleIndices"}
[2024-08-08 00:15:38,930] requestId= userEmail= traceId= spanId= - method[addFirestorePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:38,940] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-firestore-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addFirestorePlugin"}
[2024-08-08 00:15:39,048] requestId= userEmail= traceId= spanId= - method[addRedshiftPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,059] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-redshift-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addRedshiftPlugin"}
[2024-08-08 00:15:39,164] requestId= userEmail= traceId= spanId= - method[clearUserDataCollection] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,168] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="clear-userdata-collection", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="clearUserDataCollection"}
[2024-08-08 00:15:39,273] requestId= userEmail= traceId= spanId= - method[updateDatabaseDocumentationLinks_v1_2_1] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,298] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-database-documentation-links-v1-2-1", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateDatabaseDocumentationLinks_v1_2_1"}
[2024-08-08 00:15:39,407] requestId= userEmail= traceId= spanId= - method[addAmazonS3Plugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,414] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-amazons3-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addAmazonS3Plugin"}
[2024-08-08 00:15:39,520] requestId= userEmail= traceId= spanId= - method[updatePluginDatasourceFormComponents] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,558] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-plugin-datasource-form-components", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updatePluginDatasourceFormComponents"}
[2024-08-08 00:15:39,669] requestId= userEmail= traceId= spanId= - method[updateS3DatasourceConfigurationAndLabel] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,678] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-s3-datasource-configuration-and-label", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateS3DatasourceConfigurationAndLabel"}
[2024-08-08 00:15:39,782] requestId= userEmail= traceId= spanId= - method[addGoogleSheetsPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,789] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-google-sheets-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addGoogleSheetsPlugin"}
[2024-08-08 00:15:39,900] requestId= userEmail= traceId= spanId= - method[markInstanceAsUnregistered] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:39,906] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="mark-instance-unregistered", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="markInstanceAsUnregistered"}
[2024-08-08 00:15:40,009] requestId= userEmail= traceId= spanId= - method[addSnowflakePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,017] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-snowflake-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addSnowflakePlugin"}
[2024-08-08 00:15:40,121] requestId= userEmail= traceId= spanId= - method[addArangoDBPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,128] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-arangodb-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addArangoDBPlugin"}
[2024-08-08 00:15:40,233] requestId= userEmail= traceId= spanId= - method[setSvgLogoToPluginIcons] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,269] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="set-svg-logo-to-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setSvgLogoToPluginIcons"}
[2024-08-08 00:15:40,374] requestId= userEmail= traceId= spanId= - method[createPluginReferenceForGenerateCRUDPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,400] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-plugin-reference-for-genarate-CRUD-page", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createPluginReferenceForGenerateCRUDPage"}
[2024-08-08 00:15:40,504] requestId= userEmail= traceId= spanId= - method[createPluginReferenceForS3AndGSheetGenerateCRUDPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,529] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-plugin-reference-for-S3-GSheet-genarate-CRUD-page", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createPluginReferenceForS3AndGSheetGenerateCRUDPage"}
[2024-08-08 00:15:40,631] requestId= userEmail= traceId= spanId= - method[addJSPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,636] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-js-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addJSPlugin"}
[2024-08-08 00:15:40,738] requestId= userEmail= traceId= spanId= - method[updatePluginPackageNameIndexToPluginNamePackageNameAndVersion] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,853] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-plugin-package-name-index", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updatePluginPackageNameIndexToPluginNamePackageNameAndVersion"}
[2024-08-08 00:15:40,959] requestId= userEmail= traceId= spanId= - method[migrateS3PluginToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:40,967] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="migrate-s3-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateS3PluginToUqi"}
[2024-08-08 00:15:41,077] requestId= userEmail= traceId= spanId= - method[addSmtpPluginPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,085] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-smtp-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addSmtpPluginPlugin"}
[2024-08-08 00:15:41,192] requestId= userEmail= traceId= spanId= - method[addPluginNameForGoogleSheets] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,201] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-google-sheets-plugin-name", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addPluginNameForGoogleSheets"}
[2024-08-08 00:15:41,308] requestId= userEmail= traceId= spanId= - method[migrateFirestorePluginToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,317] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="migrate-firestore-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePluginToUqi"}
[2024-08-08 00:15:41,423] requestId= userEmail= traceId= spanId= - method[migrateFirestorePluginToUqi3] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,428] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="migrate-firestore-to-uqi-3", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePluginToUqi3"}
[2024-08-08 00:15:41,538] requestId= userEmail= traceId= spanId= - method[updateGitIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,569] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-index-for-git", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateGitIndexes"}
[2024-08-08 00:15:41,674] requestId= userEmail= traceId= spanId= - method[useAssetsCDNForPluginIcons] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,708] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="use-assets-cdn-for-plugin-icons", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="useAssetsCDNForPluginIcons"}
[2024-08-08 00:15:41,812] requestId= userEmail= traceId= spanId= - method[updateNewActionActionCollectionAndUserDataIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,826] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-index-for-newAction-actionCollection-userData", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateNewActionActionCollectionAndUserDataIndexes"}
[2024-08-08 00:15:41,936] requestId= userEmail= traceId= spanId= - method[markMSSQLCrudUnavailable] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:41,940] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="mark-mssql-crud-unavailable", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="markMSSQLCrudUnavailable"}
[2024-08-08 00:15:42,046] requestId= userEmail= traceId= spanId= - method[updateNewActionActionCollectionIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,074] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-index-for-newAction-actionCollection", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateNewActionActionCollectionIndexes"}
[2024-08-08 00:15:42,178] requestId= userEmail= traceId= spanId= - method[fixPluginTitleCasing] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,184] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="fix-plugin-title-casing", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="fixPluginTitleCasing"}
[2024-08-08 00:15:42,287] requestId= userEmail= traceId= spanId= - method[addIndexesForGit] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,303] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-git-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addIndexesForGit"}
[2024-08-08 00:15:42,408] requestId= userEmail= traceId= spanId= - method[addWorkspaceIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,417] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-workspace-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addWorkspaceIndexes"}
[2024-08-08 00:15:42,522] requestId= userEmail= traceId= spanId= - method[addDefaultTenant] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,537] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-default-tenant", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addDefaultTenant"}
[2024-08-08 00:15:42,645] requestId= userEmail= traceId= spanId= - method[organizationToWorkspaceIndexesRecreate] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,663] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="organization-to-workspace-indexes-recreate", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="organizationToWorkspaceIndexesRecreate"}
[2024-08-08 00:15:42,768] requestId= userEmail= traceId= spanId= - method[clearRedisCache2] with arguments: [org.springframework.data.redis.core.ReactiveRedisOperations]
[2024-08-08 00:15:42,791] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="flush-spring-redis-keys-2a", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="clearRedisCache2"}
[2024-08-08 00:15:42,868] requestId= userEmail= traceId= spanId= - method[addAnonymousUser] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:42,880] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-anonymousUser", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addAnonymousUser"}
[2024-08-08 00:15:42,982] requestId= userEmail= traceId= spanId= - method[addInstanceConfigurationPlaceHolder] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,002] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-instance-config-object", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addInstanceConfigurationPlaceHolder"}
[2024-08-08 00:15:43,108] requestId= userEmail= traceId= spanId= - method[addAnonymousUserPermissionGroup] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,116] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-anonymous-user-permission-group", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addAnonymousUserPermissionGroup"}
[2024-08-08 00:15:43,224] requestId= userEmail= traceId= spanId= - method[createThemesIndices] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,242] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-themes-indices", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="createThemesIndices"}
[2024-08-08 00:15:43,344] requestId= userEmail= traceId= spanId= - method[createSystemThemes3] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,408] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-system-themes-v3", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="createSystemThemes3"}
[2024-08-08 00:15:43,509] requestId= userEmail= traceId= spanId= - method[addPermissionGroupIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,620] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-indices-on-permissions-for-performance", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addPermissionGroupIndex"}
[2024-08-08 00:15:43,724] requestId= userEmail= traceId= spanId= - method[updateBadThemeState] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.acl.PolicyGenerator, com.appsmith.server.repositories.CacheableRepositoryHelper]
[2024-08-08 00:15:43,729] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-bad-theme-state", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateBadThemeState"}
[2024-08-08 00:15:43,824] requestId= userEmail= traceId= spanId= - method[addTenantAdminPermissionsToInstanceAdmin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl]
[2024-08-08 00:15:43,835] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-tenant-admin-permissions-instance-admin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addTenantAdminPermissionsToInstanceAdmin"}
[2024-08-08 00:15:43,939] requestId= userEmail= traceId= spanId= - method[addGraphQLPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:43,943] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-graphql-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addGraphQLPlugin"}
[2024-08-08 00:15:44,045] requestId= userEmail= traceId= spanId= - method[addIndicesRecommendedByMongoCloud] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,065] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="indices-recommended-by-mongodb-cloud", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addIndicesRecommendedByMongoCloud"}
[2024-08-08 00:15:44,174] requestId= userEmail= traceId= spanId= - method[addUniqueIndexOnUidString] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,184] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-unique-index-for-uidstring", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addUniqueIndexOnUidString"}
[2024-08-08 00:15:44,287] requestId= userEmail= traceId= spanId= - method[modifyReadPermissionGroupToReadPermissionGroupMembers] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl]
[2024-08-08 00:15:44,290] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="change-readPermissionGroup-to-readPermissionGroupMembers", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="modifyReadPermissionGroupToReadPermissionGroupMembers"}
[2024-08-08 00:15:44,395] requestId= userEmail= traceId= spanId= - method[deletePermissionsInPermissionGroups] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,400] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="delete-permissions-in-permissionGroups", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="deletePermissionsInPermissionGroups"}
[2024-08-08 00:15:44,503] requestId= userEmail= traceId= spanId= - method[removeUsagePulsesForAppsmithCloud] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.configurations.CommonConfig$$SpringCGLIB$$0]
[2024-08-08 00:15:44,503] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-usage-pulses-for-appsmith-cloud", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="removeUsagePulsesForAppsmithCloud"}
[2024-08-08 00:15:44,606] requestId= userEmail= traceId= spanId= - method[addSslModeSettingsForExistingMssqlDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,613] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-ssl-mode-settings-for-existing-mssql-datasources", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addSslModeSettingsForExistingMssqlDatasource"}
[2024-08-08 00:15:44,720] requestId= userEmail= traceId= spanId= - method[addOraclePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,729] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-oracle-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addOraclePlugin"}
[2024-08-08 00:15:44,837] requestId= userEmail= traceId= spanId= - method[updateOraclePluginName] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:44,844] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-oracle-plugin-name", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateOraclePluginName"}
[2024-08-08 00:15:44,953] requestId= userEmail= traceId= spanId= - method[updateSuperUsers] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.repositories.CacheableRepositoryHelper, com.appsmith.server.solutions.PolicySolution, com.appsmith.server.acl.PolicyGenerator]
[2024-08-08 00:15:44,964] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-super-users", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateSuperUsers"}
[2024-08-08 00:15:45,069] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration003AddInstanceNameToTenantConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,069] requestId= userEmail= traceId= spanId= - method[addInstanceNameEnvVarToTenantConfiguration] with arguments: []
[2024-08-08 00:15:45,078] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-instance-name-env-variable-tenant-configuration", "type"="execution", "author"="default_author", "class"="Migration003AddInstanceNameToTenantConfiguration", "method"="addInstanceNameEnvVarToTenantConfiguration"}
[2024-08-08 00:15:45,181] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration004PermissionGroupDefaultWorkspaceIdMigration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,181] requestId= userEmail= traceId= spanId= - method[defaultWorkspaceIdMigration] with arguments: []
No permissionGroup data to migrate.
[2024-08-08 00:15:45,183] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="migrate-default-workspace-id-to-default-domain-id", "type"="execution", "author"="default_author", "class"="Migration004PermissionGroupDefaultWorkspaceIdMigration", "method"="defaultWorkspaceIdMigration"}
[2024-08-08 00:15:45,287] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration005CreateIndexForApplicationSnapshotMigration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,288] requestId= userEmail= traceId= spanId= - method[addIndexOnApplicationIdAndChunkOrder] with arguments: []
[2024-08-08 00:15:45,303] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-index-for-application-snapshot-collection", "type"="execution", "author"="default_author", "class"="Migration005CreateIndexForApplicationSnapshotMigration", "method"="addIndexOnApplicationIdAndChunkOrder"}
[2024-08-08 00:15:45,408] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration006ResetOnPageLoadEdgesInLayouts] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,409] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:45,414] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="reset-on-page-load-edges-in-layouts", "type"="execution", "author"="default_author", "class"="Migration006ResetOnPageLoadEdgesInLayouts", "method"="executeMigration"}
[2024-08-08 00:15:45,518] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration007OptOutUnsupportedPluginsForAirGap] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,518] requestId= userEmail= traceId= spanId= - method[optOutUnsupportedPluginsForAirGapInstance] with arguments: []
[2024-08-08 00:15:45,531] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="opt-out-unsupported-plugins-airgap-instance", "type"="execution", "author"="default_author", "class"="Migration007OptOutUnsupportedPluginsForAirGap", "method"="optOutUnsupportedPluginsForAirGapInstance"}
[2024-08-08 00:15:45,638] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration008SupportNonHostedPluginsForAirgap] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,638] requestId= userEmail= traceId= spanId= - method[supportNonHostedPluginsForAirgap] with arguments: []
[2024-08-08 00:15:45,650] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="support-non-self-hosted-plugins-for-airgap", "type"="execution", "author"="default_author", "class"="Migration008SupportNonHostedPluginsForAirgap", "method"="supportNonHostedPluginsForAirgap"}
[2024-08-08 00:15:45,753] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration009UpdateOracleLogoToSVG] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,754] requestId= userEmail= traceId= spanId= - method[updateOracleLogoToSVG] with arguments: []
[2024-08-08 00:15:45,756] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-oracle-logo-to-svg", "type"="execution", "author"="default_author", "class"="Migration009UpdateOracleLogoToSVG", "method"="updateOracleLogoToSVG"}
[2024-08-08 00:15:45,861] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration010UpdatePluginDocsLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:45,861] requestId= userEmail= traceId= spanId= - method[updatePluginDocumentationLinks] with arguments: []
[2024-08-08 00:15:45,896] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-plugins-docs-link", "type"="execution", "author"="default_author", "class"="Migration010UpdatePluginDocsLink", "method"="updatePluginDocumentationLinks"}
[2024-08-08 00:15:46,000] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration011CreateIndexDefaultDomainIdDefaultDomainTypeDropIndexDefaultWorkspaceId] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,000] requestId= userEmail= traceId= spanId= - method[createNewIndexDefaultDomainIdDefaultDomainTypeAndDropOldIndexDefaultWorkspaceId] with arguments: []
[2024-08-08 00:15:46,123] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-index-default-domain-id-default-domain-type", "type"="execution", "author"="default_author", "class"="Migration011CreateIndexDefaultDomainIdDefaultDomainTypeDropIndexDefaultWorkspaceId", "method"="createNewIndexDefaultDomainIdDefaultDomainTypeAndDropOldIndexDefaultWorkspaceId"}
[2024-08-08 00:15:46,238] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration012RemoveStructureFromWithinDatasource] with arguments: [org.springframework.data.mongodb.core.MongoOperations, org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,238] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:46,255] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-structure-from-within-datasource-modified", "type"="execution", "author"="default_author", "class"="Migration012RemoveStructureFromWithinDatasource", "method"="executeMigration"}
[2024-08-08 00:15:46,356] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration013AddEmailBodyTypeToSMTPPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,356] requestId= userEmail= traceId= spanId= - method[addSmtpEmailBodyType] with arguments: []
[2024-08-08 00:15:46,363] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-smtp-email-body-type", "type"="execution", "author"="default_author", "class"="Migration013AddEmailBodyTypeToSMTPPlugin", "method"="addSmtpEmailBodyType"}
[2024-08-08 00:15:46,465] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration014AddIndexToDatasourceStorage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,465] requestId= userEmail= traceId= spanId= - method[addingIndexToDatasourceStorage] with arguments: []
[2024-08-08 00:15:46,472] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="index-for-datasource-storage", "type"="execution", "author"="default_author", "class"="Migration014AddIndexToDatasourceStorage", "method"="addingIndexToDatasourceStorage"}
[2024-08-08 00:15:46,579] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration015AddPluginTypeIndexToNewActionCollection] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,580] requestId= userEmail= traceId= spanId= - method[addingIndexToNewAction] with arguments: []
[2024-08-08 00:15:46,584] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="app-id-plugin-type-index-for-new-action", "type"="execution", "author"="default_author", "class"="Migration015AddPluginTypeIndexToNewActionCollection", "method"="addingIndexToNewAction"}
[2024-08-08 00:15:46,688] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration016RenameIndexesWithLongNames] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,689] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:46,816] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="rename-indexes-with-long-names", "type"="execution", "author"="default_author", "class"="Migration016RenameIndexesWithLongNames", "method"="executeMigration"}
[2024-08-08 00:15:46,919] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration017UnsetEncryptionVersion2Fields] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:46,919] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: [org.springframework.data.mongodb.core.MongoOperations]
[2024-08-08 00:15:46,923] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="unset-not-encrypted-encryption-version-2-fields", "type"="execution", "author"="default_author", "class"="Migration017UnsetEncryptionVersion2Fields", "method"="executeMigration"}
[2024-08-08 00:15:47,023] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration018UpdateOraclePluginDocumentationLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,024] requestId= userEmail= traceId= spanId= - method[updateOracleDocumentationLink] with arguments: []
[2024-08-08 00:15:47,027] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-oracle-doc-link", "type"="execution", "author"="default_author", "class"="Migration018UpdateOraclePluginDocumentationLink", "method"="updateOracleDocumentationLink"}
[2024-08-08 00:15:47,131] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration019RemoveNullEnvIdDatasourceStructureDocuments] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,131] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:47,136] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="delete-null-envId-key-document", "type"="execution", "author"="default_author", "class"="Migration019RemoveNullEnvIdDatasourceStructureDocuments", "method"="executeMigration"}
[2024-08-08 00:15:47,243] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration021MoveGoogleMapsKeyToTenantConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.configurations.CommonConfig]
[2024-08-08 00:15:47,243] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:47,243] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="move-google-maps-key-to-tenant-configuration", "type"="execution", "author"="default_author", "class"="Migration021MoveGoogleMapsKeyToTenantConfiguration", "method"="executeMigration"}
[2024-08-08 00:15:47,341] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration022AddConnectionMethodDefaultValueToAllMySQLDatasources] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,341] requestId= userEmail= traceId= spanId= - method[updateConnectionMethodDefaultValueForMySQL] with arguments: []
[2024-08-08 00:15:47,346] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-connection-method-default-value-for-mysql", "type"="execution", "author"="default_author", "class"="Migration022AddConnectionMethodDefaultValueToAllMySQLDatasources", "method"="updateConnectionMethodDefaultValueForMySQL"}
[2024-08-08 00:15:47,444] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration023UpdateJSPluginIcon] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,445] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:47,452] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="update-js-plugin-icon", "type"="execution", "author"="default_author", "class"="Migration023UpdateJSPluginIcon", "method"="executeMigration"}
[2024-08-08 00:15:47,558] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration024EnableGenerateCRUDPageToggleForMssqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,558] requestId= userEmail= traceId= spanId= - method[enableGenerateCRUDPageToggle] with arguments: []
[2024-08-08 00:15:47,567] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="enable-generate-crud-page-for-mssql", "type"="execution", "author"="default_author", "class"="Migration024EnableGenerateCRUDPageToggleForMssqlPlugin", "method"="enableGenerateCRUDPageToggle"}
[2024-08-08 00:15:47,675] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration025AddIndexDeletedInApplication] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,676] requestId= userEmail= traceId= spanId= - method[createIndexInApplicationCollection] with arguments: []
[2024-08-08 00:15:47,690] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-index-application-deleted", "type"="execution", "author"="default_author", "class"="Migration025AddIndexDeletedInApplication", "method"="createIndexInApplicationCollection"}
[2024-08-08 00:15:47,796] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration025RemoveUnassignPermissionFromUnnecessaryRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,797] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:47,798] requestId= userEmail= traceId= spanId= - Check if performant query can be used.
[2024-08-08 00:15:47,805] requestId= userEmail= traceId= spanId= - Using performant query.
[2024-08-08 00:15:47,807] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-unassign-permission-from-workspace-dev-viewer-roles", "type"="execution", "author"="default_author", "class"="Migration025RemoveUnassignPermissionFromUnnecessaryRoles", "method"="executeMigration"}
[2024-08-08 00:15:47,901] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration026AddIndexTenantAndDeletedInWorkspace] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:47,901] requestId= userEmail= traceId= spanId= - method[addIndexInWorkspaceCollection] with arguments: []
[2024-08-08 00:15:47,916] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-index-workspace-tenant-deleted", "type"="execution", "author"="default_author", "class"="Migration026AddIndexTenantAndDeletedInWorkspace", "method"="addIndexInWorkspaceCollection"}
[2024-08-08 00:15:48,019] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration027AddIndexDatasourceIdAndDeletedInAction] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,019] requestId= userEmail= traceId= spanId= - method[addIndexInNewActionCollection] with arguments: []
[2024-08-08 00:15:48,028] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="new-action-compound-index-datasource-id", "type"="execution", "author"="default_author", "class"="Migration027AddIndexDatasourceIdAndDeletedInAction", "method"="addIndexInNewActionCollection"}
[2024-08-08 00:15:48,131] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration028TagUserManagementRolesWithoutDefaultDomainTypeAndId] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,131] requestId= userEmail= traceId= spanId= - method[tagUserManagementRolesWithoutDefaultDomainTypeAndId] with arguments: []
[2024-08-08 00:15:48,135] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="tag-user-management-roles-without-default-domain-type-and-id", "type"="execution", "author"="default_author", "class"="Migration028TagUserManagementRolesWithoutDefaultDomainTypeAndId", "method"="tagUserManagementRolesWithoutDefaultDomainTypeAndId"}
[2024-08-08 00:15:48,243] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration029PopulateDefaultDomainIdInUserManagementRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,243] requestId= userEmail= traceId= spanId= - method[populateDefaultDomainIdInUserManagementRoles] with arguments: []
[2024-08-08 00:15:48,251] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="populate-default-domain-id-in-user-management-roles", "type"="execution", "author"="default_author", "class"="Migration029PopulateDefaultDomainIdInUserManagementRoles", "method"="populateDefaultDomainIdInUserManagementRoles"}
[2024-08-08 00:15:48,344] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration030TagUsersWithNoUserManagementRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,344] requestId= userEmail= traceId= spanId= - method[tagUsersWithNoUserManagementRoles] with arguments: []
[2024-08-08 00:15:48,347] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="tag-users-with-no-user-management-roles", "type"="execution", "author"="default_author", "class"="Migration030TagUsersWithNoUserManagementRoles", "method"="tagUsersWithNoUserManagementRoles"}
[2024-08-08 00:15:48,450] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration031CreateUserManagementRolesForUsersTaggedIn030] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolution]
[2024-08-08 00:15:48,450] requestId= userEmail= traceId= spanId= - method[createUserManagementRolesForUsersTaggedInMigration030] with arguments: []
[2024-08-08 00:15:48,450] requestId= userEmail= traceId= spanId= - Check if performant query can be used.
[2024-08-08 00:15:48,451] requestId= userEmail= traceId= spanId= - Using performant query.
[2024-08-08 00:15:48,453] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="create-user-management-roles-for-users-tagged-in-migration-030", "type"="execution", "author"="default_author", "class"="Migration031CreateUserManagementRolesForUsersTaggedIn030", "method"="createUserManagementRolesForUsersTaggedInMigration030"}
[2024-08-08 00:15:48,557] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration032AddingXmlParserToApplicationLibraries] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,558] requestId= userEmail= traceId= spanId= - method[addXmlParserEntryToEachApplication] with arguments: []
[2024-08-08 00:15:48,571] requestId= userEmail= traceId= spanId= - Going to add Xml Parser uid in all application DTOs
[2024-08-08 00:15:48,578] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-xml-parser-to-application-jslibs", "type"="execution", "author"="default_author", "class"="Migration032AddingXmlParserToApplicationLibraries", "method"="addXmlParserEntryToEachApplication"}
[2024-08-08 00:15:48,681] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration033AddOpenAIPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,682] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:48,689] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-open-ai-plugin", "type"="execution", "author"="default_author", "class"="Migration033AddOpenAIPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:48,792] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration034ChangeOpenAIIntegrationDocumentationLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,792] requestId= userEmail= traceId= spanId= - method[changeDocumentationLink] with arguments: []
[2024-08-08 00:15:48,800] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="change-open-ai-integration-documentation-link", "type"="execution", "author"="default_author", "class"="Migration034ChangeOpenAIIntegrationDocumentationLink", "method"="changeDocumentationLink"}
[2024-08-08 00:15:48,906] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration035AddAnthropicPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:48,907] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:48,915] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-anthropic-plugin", "type"="execution", "author"="default_author", "class"="Migration035AddAnthropicPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:49,018] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration035RemoveMockDbEndPointInDatasourceInSelfHostedInstance] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.configurations.CommonConfig, com.appsmith.server.solutions.EnvManager]
[2024-08-08 00:15:49,019] requestId= userEmail= traceId= spanId= - method[removeMockDbEndpointInDatasource] with arguments: []
[2024-08-08 00:15:49,021] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-mockdb-endpoint-in-datasource-self-hosted-instance", "type"="execution", "author"="default_author", "class"="Migration035RemoveMockDbEndPointInDatasourceInSelfHostedInstance", "method"="removeMockDbEndpointInDatasource"}
[2024-08-08 00:15:49,129] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration036AddRecentlyUsedEntitiesForUserData] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,130] requestId= userEmail= traceId= spanId= - method[addRecentlyUsedEntitiesForUserData] with arguments: []
[2024-08-08 00:15:49,133] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-recently-used-entities-for-user", "type"="execution", "author"="default_author", "class"="Migration036AddRecentlyUsedEntitiesForUserData", "method"="addRecentlyUsedEntitiesForUserData"}
[2024-08-08 00:15:49,231] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration037AddCompoundIndexForNameAndDeletedAt] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,231] requestId= userEmail= traceId= spanId= - method[addIndexInWorkspaceAndApplicationsCollection] with arguments: []
[2024-08-08 00:15:49,252] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-compound-index-name-deleted", "type"="execution", "author"="default_author", "class"="Migration037AddCompoundIndexForNameAndDeletedAt", "method"="addIndexInWorkspaceAndApplicationsCollection"}
[2024-08-08 00:15:49,356] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration037MarkAnonymousUserAsSystemGenerated] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,356] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:49,361] requestId= userEmail= traceId= spanId= - Marked 1 anonymous users as system generated
[2024-08-08 00:15:49,361] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="mark-anonymous-user-as-system-generated", "type"="execution", "author"="default_author", "class"="Migration037MarkAnonymousUserAsSystemGenerated", "method"="executeMigration"}
[2024-08-08 00:15:49,463] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration038AddCompoundIndexForActionCollection] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,464] requestId= userEmail= traceId= spanId= - method[addIndexInActionCollection] with arguments: []
[2024-08-08 00:15:49,475] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-compound-index-action-collection", "type"="execution", "author"="default_author", "class"="Migration038AddCompoundIndexForActionCollection", "method"="addIndexInActionCollection"}
[2024-08-08 00:15:49,579] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration038AddGoogleAIPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,579] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:49,584] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-google-ai-plugin", "type"="execution", "author"="default_author", "class"="Migration038AddGoogleAIPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:49,687] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration039AddCompoundIndexForDatasourceStorage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,687] requestId= userEmail= traceId= spanId= - method[addIndexInDatasourceStorageCollection] with arguments: []
[2024-08-08 00:15:49,695] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-compound-index-datasource-storage", "type"="execution", "author"="default_author", "class"="Migration039AddCompoundIndexForDatasourceStorage", "method"="addIndexInDatasourceStorageCollection"}
[2024-08-08 00:15:49,800] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration039AddDatabricksPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,801] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:49,806] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-databricks-plugin", "type"="execution", "author"="default_author", "class"="Migration039AddDatabricksPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:49,916] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration039OpenAIMessagesJsToggle] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:49,916] requestId= userEmail= traceId= spanId= - method[moveMessagesToDataKeyForSupportingJsToggle] with arguments: []
[2024-08-08 00:15:49,923] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="move-messages-to-data-key-in-openai", "type"="execution", "author"="default_author", "class"="Migration039OpenAIMessagesJsToggle", "method"="moveMessagesToDataKeyForSupportingJsToggle"}
[2024-08-08 00:15:50,016] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration040AddAWSLambdaPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,016] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:50,020] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-aws-lambda-plugin", "type"="execution", "author"="default_author", "class"="Migration040AddAWSLambdaPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:50,124] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration040AddAppsmithAiPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,124] requestId= userEmail= traceId= spanId= - method[addPluginToDbAndWorkspace] with arguments: []
[2024-08-08 00:15:50,128] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-appsmith-ai-plugin", "type"="execution", "author"="default_author", "class"="Migration040AddAppsmithAiPlugin", "method"="addPluginToDbAndWorkspace"}
[2024-08-08 00:15:50,234] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration041TagWorkspacesForGitOperationsPermissionMigration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,235] requestId= userEmail= traceId= spanId= - method[addPermissionForGitOperationsToExistingWorkspaces] with arguments: []
[2024-08-08 00:15:50,240] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="tag-workspaces-to-migrate-adding-git-permissions", "type"="execution", "author"="default_author", "class"="Migration041TagWorkspacesForGitOperationsPermissionMigration", "method"="addPermissionForGitOperationsToExistingWorkspaces"}
[2024-08-08 00:15:50,344] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration042AddPermissionsForGitOperations] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,345] requestId= userEmail= traceId= spanId= - method[addPermissionForGitOperationsToExistingApplications] with arguments: []
[2024-08-08 00:15:50,349] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-permissions-for-git-operations", "type"="execution", "author"="default_author", "class"="Migration042AddPermissionsForGitOperations", "method"="addPermissionForGitOperationsToExistingApplications"}
[2024-08-08 00:15:50,446] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration043AddIndexActionCollectionPageID] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,446] requestId= userEmail= traceId= spanId= - method[addIndexToActionCollectionCollection] with arguments: []
[2024-08-08 00:15:50,459] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-index-to-action-collection-default-resources-pageid", "type"="execution", "author"="default_author", "class"="Migration043AddIndexActionCollectionPageID", "method"="addIndexToActionCollectionCollection"}
[2024-08-08 00:15:50,566] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration044AddIndexesToDomainObjects] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,566] requestId= userEmail= traceId= spanId= - method[addIndexToDomainObjects] with arguments: []
[2024-08-08 00:15:50,586] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-index-to-domain-objects", "type"="execution", "author"="default_author", "class"="Migration044AddIndexesToDomainObjects", "method"="addIndexToDomainObjects"}
[2024-08-08 00:15:50,693] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration045AddDefaultAppsmithAiDatasourceForOrphanActions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,693] requestId= userEmail= traceId= spanId= - method[addDefaultAppsmithAiDatasourceForOrphanActions] with arguments: []
[2024-08-08 00:15:50,697] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-default-appsmith-datasource", "type"="execution", "author"="default_author", "class"="Migration045AddDefaultAppsmithAiDatasourceForOrphanActions", "method"="addDefaultAppsmithAiDatasourceForOrphanActions"}
[2024-08-08 00:15:50,797] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration046DeleteArchivedPlugins] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,798] requestId= userEmail= traceId= spanId= - method[deleteArchivedPlugins] with arguments: []
[2024-08-08 00:15:50,809] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="delete-archived-pluginsd", "type"="execution", "author"="default_author", "class"="Migration046DeleteArchivedPlugins", "method"="deleteArchivedPlugins"}
[2024-08-08 00:15:50,916] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration047AddMissingFieldsInDefaultAppsmithAiDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:50,917] requestId= userEmail= traceId= spanId= - method[addMissingFieldsInDefaultAppsmithAiDatasource] with arguments: []
[2024-08-08 00:15:50,926] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-missing-fields-in-default-appsmith-datasource", "type"="execution", "author"="default_author", "class"="Migration047AddMissingFieldsInDefaultAppsmithAiDatasource", "method"="addMissingFieldsInDefaultAppsmithAiDatasource"}
[2024-08-08 00:15:51,016] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration048AddCompoundIndexToUserEntity] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,017] requestId= userEmail= traceId= spanId= - method[addMissingIndexInUserCollection] with arguments: []
[2024-08-08 00:15:51,144] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-compound-index-in-user-collection", "type"="execution", "author"="default_author", "class"="Migration048AddCompoundIndexToUserEntity", "method"="addMissingIndexInUserCollection"}
[2024-08-08 00:15:51,248] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration049RemoveLayoutBaseFields] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,249] requestId= userEmail= traceId= spanId= - method[execute] with arguments: []
[2024-08-08 00:15:51,269] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-layout-base-fields", "type"="execution", "author"="default_author", "class"="Migration049RemoveLayoutBaseFields", "method"="execute"}
[2024-08-08 00:15:51,373] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration050MoveAnthropicLegacyModelsInQueries] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,373] requestId= userEmail= traceId= spanId= - method[moveAnthropicLegacyModelsInQueries] with arguments: []
[2024-08-08 00:15:51,373] requestId= userEmail= traceId= spanId= - Migrating Anthropic legacy models in queries to next version models
[2024-08-08 00:15:51,377] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="move-anthropic-legacy-models", "type"="execution", "author"="default_author", "class"="Migration050MoveAnthropicLegacyModelsInQueries", "method"="moveAnthropicLegacyModelsInQueries"}
[2024-08-08 00:15:51,475] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration051AddNewActionCollectionIdIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,475] requestId= userEmail= traceId= spanId= - method[addMissingIndexInNewActionCollection] with arguments: []
[2024-08-08 00:15:51,498] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-idx-new-action-coll-id", "type"="execution", "author"="default_author", "class"="Migration051AddNewActionCollectionIdIndex", "method"="addMissingIndexInNewActionCollection"}
[2024-08-08 00:15:51,605] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration052RemoveInvalidPluginsInWorkspaces] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,605] requestId= userEmail= traceId= spanId= - method[execute] with arguments: []
[2024-08-08 00:15:51,608] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="remove-invalid-plugins-in-workspaces", "type"="execution", "author"="default_author", "class"="Migration052RemoveInvalidPluginsInWorkspaces", "method"="execute"}
[2024-08-08 00:15:51,714] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration053AddApplicationDeletePagePermissionToApplications] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,715] requestId= userEmail= traceId= spanId= - method[addApplicationDeletePagesPermissionToApplication] with arguments: []
[2024-08-08 00:15:51,725] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-app-delete-pages-permission-to-application", "type"="execution", "author"="default_author", "class"="Migration053AddApplicationDeletePagePermissionToApplications", "method"="addApplicationDeletePagesPermissionToApplication"}
[2024-08-08 00:15:51,827] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration055AddIsAtomicPushAllowedEnvVarToTenantConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,827] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:51,834] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-is-atomic-push-allowed-env-variable-tenant-configuration", "type"="execution", "author"="default_author", "class"="Migration055AddIsAtomicPushAllowedEnvVarToTenantConfiguration", "method"="executeMigration"}
[2024-08-08 00:15:51,938] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration056AddBranchNameAndDefaultArtifactIndexToApplication] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:51,939] requestId= userEmail= traceId= spanId= - method[createIndexForApplication] with arguments: []
[2024-08-08 00:15:51,953] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="add-idx-branch-name-default-artifact-id", "type"="execution", "author"="default_author", "class"="Migration056AddBranchNameAndDefaultArtifactIndexToApplication", "method"="createIndexForApplication"}
[2024-08-08 00:15:52,060] requestId= userEmail= traceId= spanId= - method[com.appsmith.server.migrations.db.ce.Migration020TransferToDatasourceStorage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2024-08-08 00:15:52,060] requestId= userEmail= traceId= spanId= - method[executeMigration] with arguments: []
[2024-08-08 00:15:52,061] requestId= userEmail= traceId= spanId= - Check if performant query can be used.
[2024-08-08 00:15:52,064] requestId= userEmail= traceId= spanId= - Using performant query.
[2024-08-08 00:15:52,067] requestId= userEmail= traceId= spanId= - APPLIED - {"id"="migrate-configurations-to-data-storage-v2", "type"="execution", "author"="default_author", "class"="Migration020TransferToDatasourceStorage", "method"="executeMigration"}
[2024-08-08 00:15:52,164] requestId= userEmail= traceId= spanId= - Mongock releasing the lock
[2024-08-08 00:15:52,164] requestId= userEmail= traceId= spanId= - Mongock releasing the lock
[2024-08-08 00:15:52,268] requestId= userEmail= traceId= spanId= - Mongock released the lock
[2024-08-08 00:15:52,268] requestId= userEmail= traceId= spanId= - Mongock has finished
[2024-08-08 00:15:53,130] requestId= userEmail= traceId= spanId= - Exposing 2 endpoint(s) beneath base path '/actuator'
[2024-08-08 00:15:53,306] requestId= userEmail= traceId= spanId= - Netty started on port 8080
[2024-08-08 00:15:53,317] requestId= userEmail= traceId= spanId= - Started ServerApplication in 21.976 seconds (process running for 22.255)
[2024-08-08 00:15:53,325] requestId= userEmail= traceId= spanId= - Performing RTS health check of this instance...
[2024-08-08 00:15:53,331] requestId= userEmail= traceId= spanId= - In memory cache miss for anonymous user permission groups. Fetching from DB and adding it to in memory storage.
[2024-08-08 00:15:53,354] requestId= userEmail= traceId= spanId= - Fetched and set conenncted mongo db version as: 5.0.28
[2024-08-08 00:15:53,376] requestId= userEmail= traceId= spanId= - Triggering registration of this instance...
[2024-08-08 00:15:53,865] requestId= userEmail= traceId= spanId= - Registration successful, updating state ...
[2024-08-08 00:15:53,898] requestId= userEmail= traceId= spanId= - RTS health check succeeded
[2024-08-08 00:15:53,901] requestId= userEmail= traceId= spanId= - License verification completed with status: valid
[2024-08-08 00:15:53,915] requestId= userEmail= traceId= spanId= - Cache miss for key tenantNewFeatures:66b40e2e97d7071925a15b87
[2024-08-08 00:15:54,159] requestId= userEmail= traceId= spanId= - Cache entry added for key tenantNewFeatures:66b40e2e97d7071925a15b87
[2024-08-08 00:15:55,287] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Going to fetch consolidatedAPI response for applicationId: null, defaultPageId: null, branchName: null, mode: PUBLISHED
[2024-08-08 00:15:55,308] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache miss for key featureFlag:68385f9726ad05c8e551a8d5be5cd8213f1e733346a9eb00e86f83df94639555
[2024-08-08 00:15:55,313] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache miss for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:15:55,313] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Fetching tenant from database as it couldn't be found in the cache!
[2024-08-08 00:15:55,319] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache entry added for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:15:55,326] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache miss for key permissionGroupsForUser:anonymousUser66b40e2e97d7071925a15b87
[2024-08-08 00:15:55,326] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache entry added for key permissionGroupsForUser:anonymousUser66b40e2e97d7071925a15b87
[2024-08-08 00:15:55,399] requestId=d0df7b78-520e-4e98-bfc0-18118405475b userEmail=anonymousUser traceId= spanId= - Cache entry added for key featureFlag:68385f9726ad05c8e551a8d5be5cd8213f1e733346a9eb00e86f83df94639555
[2024-08-08 00:15:56,003] requestId= userEmail= traceId= spanId= - Cancelled mongock lock daemon
[2024-08-08 00:16:03,319] requestId= userEmail= traceId= spanId= - Fetching features for default tenant
[2024-08-08 00:16:03,324] requestId= userEmail= traceId= spanId= - Cache entry evicted for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:03,337] requestId= userEmail= traceId= spanId= - Cache miss for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:03,337] requestId= userEmail= traceId= spanId= - Fetching tenant from database as it couldn't be found in the cache!
[2024-08-08 00:16:03,339] requestId= userEmail= traceId= spanId= - Cache entry added for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,676] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache miss for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,680] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry added for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,684] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserServiceCEImpl::Time taken for create user: 33 ms
[2024-08-08 00:16:35,745] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry evicted for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,749] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserServiceCEImpl::Time taken to create default workspace: 64 ms
[2024-08-08 00:16:35,749] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Created blank default workspace for user 'nate.festinger@gmail.com'.
[2024-08-08 00:16:35,751] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserServiceCEImpl::Time taken to find created user: 100 ms
[2024-08-08 00:16:35,751] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken for create user and send email: 105 ms
[2024-08-08 00:16:35,752] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Login succeeded for user: User(name=Nate Festinger, email=nate.festinger@gmail.com, hashedEmail=null, passwordResetInitiated=false, source=FORM, state=ACTIVATED, isEnabled=true, emailVerificationRequired=null, emailVerified=null, workspaceIds=null, examplesWorkspaceId=null, inviteToken=null, isAnonymous=false, tenantId=66b40e2e97d7071925a15b87, isSystemGenerated=null, lastActiveAt=null)
[2024-08-08 00:16:35,770] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache miss for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,772] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry added for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,886] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Published application 66b40e6397d7071925a15ba9 in 33 ms
[2024-08-08 00:16:35,889] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken for authentication success: 132 ms
[2024-08-08 00:16:35,889] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken to complete signupAndLogin: 321 ms
[2024-08-08 00:16:35,897] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry evicted for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,897] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken to complete makeSuperUser: 7 ms
[2024-08-08 00:16:35,898] requestId= userEmail= traceId= spanId= - UserSignupCEImpl::Time taken to send create super user event: 0 ms
[2024-08-08 00:16:35,899] requestId= userEmail= traceId= spanId= - UserSignupCEImpl::Time taken to get instance ID: 0 ms
[2024-08-08 00:16:35,899] requestId= userEmail= traceId= spanId= - UserSignupCEImpl::Time taken to get external address: 0 ms
[2024-08-08 00:16:35,899] requestId= userEmail= traceId= spanId= - Installation setup complete.
[2024-08-08 00:16:35,899] requestId= userEmail= traceId= spanId= - UserSignupCEImpl::Time taken to send installation setup complete analytics event: 0 ms
[2024-08-08 00:16:35,899] requestId= userEmail= traceId= spanId= - UserSignupCEImpl::Time taken to send installation setup analytics event: 1 ms
[2024-08-08 00:16:35,900] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache miss for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,902] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry added for key permissionGroupsForUser:nate.festinger@gmail.com66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,903] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken to update user data for user: 4 ms
[2024-08-08 00:16:35,910] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - Cache entry evicted for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:35,930] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken to apply env changes: 31 ms
[2024-08-08 00:16:35,930] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken to complete all secondary functions: 31 ms
[2024-08-08 00:16:35,930] requestId=9f2b491c-25e3-46e5-884a-5f5351c29992 userEmail=anonymousUser traceId= spanId= - UserSignupCEImpl::Time taken for the user mono to complete: 372 ms
[2024-08-08 00:16:36,234] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Going to fetch consolidatedAPI response for applicationId: null, defaultPageId: null, branchName: null, mode: PUBLISHED
[2024-08-08 00:16:36,239] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Cache miss for key featureFlag:0c34e5efe0644b4efed97f8ed495b9ccbcda6ed153c75ba1003ecf0f05030911
[2024-08-08 00:16:36,240] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Cache miss for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:36,240] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Fetching tenant from database as it couldn't be found in the cache!
[2024-08-08 00:16:36,245] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Cache entry added for key tenant:66b40e2e97d7071925a15b87
[2024-08-08 00:16:36,322] requestId=b75e453b-fb30-4bd2-88ae-116693803fb9 userEmail=nate.festinger@gmail.com traceId= spanId= - Cache entry added for key featureFlag:0c34e5efe0644b4efed97f8ed495b9ccbcda6ed153c75ba1003ecf0f05030911
[2024-08-08 00:16:36,458] requestId=a3a6b041-a5b1-4c29-9e68-c62d14efb3e4 userEmail=nate.festinger@gmail.com traceId= spanId= - Going to get all applications by workspace id 66b40e6397d7071925a15ba4
[2024-08-08 00:16:36,493] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Getting all plugins in workspace 66b40e6397d7071925a15ba4
[2024-08-08 00:16:36,500] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin restapi-plugin
[2024-08-08 00:16:36,502] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin elasticsearch-plugin
[2024-08-08 00:16:36,502] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin dynamo-plugin
[2024-08-08 00:16:36,503] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin redis-plugin
[2024-08-08 00:16:36,504] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin firestore-plugin
[2024-08-08 00:16:36,504] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin redshift-plugin
[2024-08-08 00:16:36,505] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin amazons3-plugin
[2024-08-08 00:16:36,505] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin google-sheets-plugin
[2024-08-08 00:16:36,506] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin smtp-plugin
[2024-08-08 00:16:36,506] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin js-plugin
[2024-08-08 00:16:36,506] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin graphql-plugin
[2024-08-08 00:16:36,507] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin openai-plugin
[2024-08-08 00:16:36,507] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin anthropic-plugin
[2024-08-08 00:16:36,508] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin googleai-plugin
[2024-08-08 00:16:36,508] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin databricks-plugin
[2024-08-08 00:16:36,509] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin appsmithai-plugin
[2024-08-08 00:16:36,509] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin aws-lambda-plugin
[2024-08-08 00:16:36,511] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin saas-plugin
[2024-08-08 00:16:36,511] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin saas-plugin
[2024-08-08 00:16:36,512] requestId=dc4a7a9d-3cec-4c2b-8ccc-035105c20829 userEmail=nate.festinger@gmail.com traceId= spanId= - Error loading templates metadata in plugin saas-plugin
